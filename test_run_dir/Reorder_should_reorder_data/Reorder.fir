;buildInfoPackage: chisel3, version: 3.4.2, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Reorder : 
  module Reorder : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, out : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}, flip inValid : UInt<1>, outValid : UInt<1>}
    
    cmem ram : {re : Fixed<32><<16>>, im : Fixed<32><<16>>}[16] @[SDC_SDF_combFFT.scala 246:16]
    reg inCounter : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[SDC_SDF_combFFT.scala 248:26]
    reg ICNextBit : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[SDC_SDF_combFFT.scala 249:26]
    reg outCounter : UInt<4>, clock with : (reset => (reset, UInt<4>("h00"))) @[SDC_SDF_combFFT.scala 250:27]
    node _index0_T = bits(inCounter, 1, 0) @[Bitwise.scala 109:18]
    node index0_hi = bits(_index0_T, 0, 0) @[Bitwise.scala 109:18]
    node index0_lo = bits(_index0_T, 1, 1) @[Bitwise.scala 109:44]
    node index0_hi_1 = cat(index0_hi, index0_lo) @[Cat.scala 30:58]
    node index0_lo_1 = bits(inCounter, 2, 2) @[Bitwise.scala 109:44]
    node index0 = cat(index0_hi_1, index0_lo_1) @[Cat.scala 30:58]
    node _index1_T = bits(inCounter, 1, 0) @[Bitwise.scala 109:18]
    node index1_hi = bits(_index1_T, 0, 0) @[Bitwise.scala 109:18]
    node index1_lo = bits(_index1_T, 1, 1) @[Bitwise.scala 109:44]
    node index1_hi_1 = cat(index1_hi, index1_lo) @[Cat.scala 30:58]
    node index1_lo_1 = bits(inCounter, 2, 2) @[Bitwise.scala 109:44]
    node _index1_T_1 = cat(index1_hi_1, index1_lo_1) @[Cat.scala 30:58]
    node _index1_T_2 = add(_index1_T_1, UInt<4>("h08")) @[SDC_SDF_combFFT.scala 252:35]
    node index1 = tail(_index1_T_2, 1) @[SDC_SDF_combFFT.scala 252:35]
    node _T = neq(inCounter, UInt<1>("h00")) @[SDC_SDF_combFFT.scala 253:34]
    node _T_1 = neq(ICNextBit, UInt<1>("h00")) @[SDC_SDF_combFFT.scala 253:55]
    node _T_2 = or(_T, _T_1) @[SDC_SDF_combFFT.scala 253:42]
    node _T_3 = or(io.inValid, _T_2) @[SDC_SDF_combFFT.scala 253:20]
    when _T_3 : @[SDC_SDF_combFFT.scala 253:65]
      node _T_4 = eq(ICNextBit, UInt<1>("h00")) @[SDC_SDF_combFFT.scala 254:29]
      node _T_5 = mux(_T_4, index1, index0) @[SDC_SDF_combFFT.scala 254:18]
      write mport MPORT = ram[_T_5], clock
      MPORT.im <= io.in.im
      MPORT.re <= io.in.re
      node _inCounter_T = add(inCounter, UInt<1>("h01")) @[SDC_SDF_combFFT.scala 255:28]
      node _inCounter_T_1 = tail(_inCounter_T, 1) @[SDC_SDF_combFFT.scala 255:28]
      inCounter <= _inCounter_T_1 @[SDC_SDF_combFFT.scala 255:15]
      node _T_6 = eq(inCounter, UInt<3>("h07")) @[SDC_SDF_combFFT.scala 256:21]
      when _T_6 : @[SDC_SDF_combFFT.scala 256:48]
        node _ICNextBit_T = add(ICNextBit, UInt<1>("h01")) @[SDC_SDF_combFFT.scala 257:30]
        node _ICNextBit_T_1 = tail(_ICNextBit_T, 1) @[SDC_SDF_combFFT.scala 257:30]
        ICNextBit <= _ICNextBit_T_1 @[SDC_SDF_combFFT.scala 257:17]
        skip @[SDC_SDF_combFFT.scala 256:48]
      skip @[SDC_SDF_combFFT.scala 253:65]
    node _io_outValid_T = cat(ICNextBit, inCounter) @[Cat.scala 30:58]
    reg io_outValid_REG : UInt, clock @[SDC_SDF_combFFT.scala 260:26]
    io_outValid_REG <= _io_outValid_T @[SDC_SDF_combFFT.scala 260:26]
    node _io_outValid_T_1 = eq(io_outValid_REG, UInt<4>("h0f")) @[SDC_SDF_combFFT.scala 260:54]
    node _io_outValid_T_2 = neq(outCounter, UInt<1>("h00")) @[SDC_SDF_combFFT.scala 260:92]
    node _io_outValid_T_3 = or(_io_outValid_T_1, _io_outValid_T_2) @[SDC_SDF_combFFT.scala 260:77]
    io.outValid <= _io_outValid_T_3 @[SDC_SDF_combFFT.scala 260:15]
    when io.outValid : @[SDC_SDF_combFFT.scala 261:22]
      node _outCounter_T = add(outCounter, UInt<1>("h01")) @[SDC_SDF_combFFT.scala 262:30]
      node _outCounter_T_1 = tail(_outCounter_T, 1) @[SDC_SDF_combFFT.scala 262:30]
      outCounter <= _outCounter_T_1 @[SDC_SDF_combFFT.scala 262:16]
      skip @[SDC_SDF_combFFT.scala 261:22]
    read mport io_out_MPORT = ram[outCounter], clock @[SDC_SDF_combFFT.scala 264:21]
    io.out.im <= io_out_MPORT.im @[SDC_SDF_combFFT.scala 264:10]
    io.out.re <= io_out_MPORT.re @[SDC_SDF_combFFT.scala 264:10]
    
